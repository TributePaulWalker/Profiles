# Sample Quantumult Configuration

# 以 ";" 或 "#" 或 "//" 开头的行为注释行。

[general]
# 自定义订阅配置图标
;profile_img_url = http://www.example.com/example.png

# 资源解析器
# 可在 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js 上找到资源解析器 URL 示例
resource_parser_url = https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js

# ---(延迟测试)---
# Quantumult 使用 HEAD 方法发送 HTTP 请求到 server_check_url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 握手到代理服务器，第二个是 HTTP 延迟 (从 Quantumult 成功收到 server_check_url 的 HTTP 响应到 Quantumult 开始发送 HTTP 请求到 server_check_url 的时间)。
# 闪电图标意味着 TCP Fast Open 成功。
# 如果 [server_local] 部分或 [server_remote] 中的服务器有自己的 server_check_url，则使用它自己的 server_check_url，而不是 [general] 部分的 server_check_url。

# 网络检查 URL
network_check_url = http://www.apple.com/library/test/success.html
# 服务器检查 URL
server_check_url = http://cp.cloudflare.com/generate_204
# 服务器检查 User Agent
;server_check_user_agent = Agent/1.0
# 服务器检查超时 (毫秒)
# 仅当 server_check_timeout 值小于或等于 5000 (毫秒) 时，才会考虑该值。
# 该值与检查过程的总持续时间 (包括 DNS 查询、TCP 握手、TLS 握手和应用层 HTTP 会话持续时间) 进行比较，因此总持续时间可能显著长于「TCP握手」和「HTTP会话持续时间」。
;server_check_timeout = 5000
# ------

# 节点地理位置检查器
geo_location_checker = http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Quantumult/Script/geo_location_checker.js

# ---(运行模式与临时禁用)---
# 运行模式
# 格式为 [蜂窝数据], [Wi-Fi], [SSID]，下例表示为在蜂窝数据使用分流 (第一个 filter)，在 Wi-Fi 使用分流 (第二个 filter)，在 SSID 为 LINK_22E171 时使用全部代理，在 SSID 为 LINK_22E172 时使用全部直连。
# 此时 Rewrite 与 Task 仍然生效。
;running_mode_trigger = filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在 SSID 为 LINK_22E174 与 LINK_22E175 时暂时禁用 Quantumult X
# 此时仅 Task 生效。
;ssid_suspended_list = LINK_22E174, LINK_22E175
# ------

# ---(DNS)---
# DNS 排除列表，设置禁用 Fake IP 的域名。不在 dns_exclusion_list 中的域名启用了占位符 IP (198.18.0.0/15) 映射机制，并具有所谓的「resolve-on-remote」效果。
# 对 dns_exclusion_list 中域名的 dns 查询可能遵循也可能不遵循 [dns] 中的设置。
dns_exclusion_list = *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com

# 默认情况下 (loopback) 当一个域在 DNS 级别被拒绝时，将返回环回IP响应，可以通过将 dns_reject_domain_behavior 设置为 no-error-no-answer、nxdomain 或 none 来更改此行为。
# 这将改变响应行为，使用 NOERROR NOANSWER 响应或使用 NXDOMAIN 响应或无响应来禁用 DNS 级别拒绝特性。
# 如果把拒绝域名改为非拒绝的 (通过改变配置、分流或策略)，可能最多需要 10 秒钟才能生效 (TTL 10)。
;dns_reject_domain_behavior = loopback

# 自定义 DoH 的 User Agent
;doh_user_agent = Agent/1.0
# ------

# ---(UDP)---
# 设置丢弃 (通过 Quantumault 隧道接口)的 UDP 数据包的端口，ICMP (端口不可达) 消息将被发回。
# 这个设置与分流规则或策略无关，与代理 (服务器) 端口也无关。
# 可以通过 udp_whitelist 设置不丢弃的白名单端口，使用 - 设置端口范围，如：udp_whitelist = 53, 123, 1900, 80-443
# 或使用 udp_drop_list 设置指定端口，如：udp_drop_list = 1900, 80
# udp_drop_list 机制类似于 udp_whitelist 丢弃 UDP 数据包，但不会发回 ICMP 消息。udp_drop_list 只能捕获 udp_drop_list 允许的 UDP 数据包。
udp_drop_list = 443

# 用于设置当代理 (服务器) 不支持 UDP Relay (未在配置中配置 udp-relay=true 或服务端不支持或未开启) 时，所使用的 UDP 连接策略。
# 默认为 reject，若没有支持 UDP Relay 的代理 (服务器) 可考虑设置为 direct，以免影响如使用 UDP 连接的语音视频通话、游戏等连接。
# 注意：如果需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
fallback_udp_policy = reject
# ------

# excluded_routes 的流量不会由 Quantumult 处理。最好在修改后重新启动设备。
excluded_routes = 239.255.255.250/32

icmp_auto_reply = true

[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的 DNS 服务器。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
;no-ipv6

# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Bytedance
server=180.184.1.1
# > Alibaba Public DNS
server=223.5.5.5

# 设置 DNS over HTTPS 或 DNS over QUIC 时，系统和所有其他未加密的常规 (没有特定的域与之绑定) 服务器将被忽略。DoQ 的默认端口是 853，如果双方同意为 DoQ 使用另一个端口，如 456，您可以将其设置为 quic://dns.example.com:456
# 多个(并发查询) DoQ 或 DoH 应在一行中配置，URL 用逗号分隔。当设置 DoQ 和 DoH 时，查询将同时发送到所有服务器。
# 如果 iOS 版本 < iOS 13.0，DoH 服务器的最大数量将限制为 1。如果 iOS 版本 < iOS 15.0，DoH 服务器的最大数量将限制为 2。
# 当设置了 prefer-doh3 时，DoH 查询将尝试通过 HTTP3 进行 DNS，如果失败，则查询连接将回退到 HTTP2。由于 HTTP/2 和 HTTP/3 连接支持多路传输，因此当您更改此设置时，它可能不会立即生效，但您可以重新连接 Quantumult X 隧道或手动更改网络环境以使其立即生效。
;prefer-doh3
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doh-server = https://exmaple1.com/dns-query, https://exmaple2.com/dns-query

# 本地 DNS 映射
# > Firebase Cloud Messaging
address=/mtalk.google.com/alt8-mtalk.google.com
address=/alt*-mtalk.google.com/alt8-mtalk.google.com
# > Google Dl
server=/dl.google.com/119.29.29.29
server=/dl.l.google.com/119.29.29.29
server=/update.googleapis.com/119.29.29.29
# > PlayStation
server=/*.dl.playstation.net/119.29.29.29

# 当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果 (如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录)；
# 如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败；
# 如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数；
# CN 61.160.148.90, 182.43.124.6, 124.236.16.201
# CU 39.102.194.95, 106.74.25.198
# CM 36.135.17.248, 36.135.82.110, 39.105.1.17, 39.130.181.72, 39.130.181.73, 39.173.74.185, 47.92.198.202, 111.22.226.1, 111.28.0.32, 111.31.192.110, 111.44.246.131, 111.56.127.216, 111.63.132.170, 112.15.232.43, 112.17.14.211, 112.54.50.50, 117.156.25.11, 117.187.6.14, 117.187.10.42, 120.202.17.103, 120.204.204.201, 120.209.204.204, 120.222.19.204, 121.4.135.105,183.203.36.19, 183.203.36.36, 183.207.72.18, 183.213.92.2, 183.220.145.129, 183.252.183.9, 211.137.54.227, 211.137.117.149, 211.137.133.69, 211.138.218.190, 211.139.25.61, 211.139.145.129, 218.201.25.129, 218.201.25.130, 218.203.122.98, 221.130.39.3, 221.180.160.221
circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0, 61.160.148.90, 182.43.124.6, 124.236.16.201, 39.102.194.95, 106.74.25.198, 36.135.17.248, 36.135.82.110, 39.105.1.17, 39.130.181.72, 39.130.181.73, 39.173.74.185, 47.92.198.202, 111.22.226.1, 111.28.0.32, 111.31.192.110, 111.44.246.131, 111.56.127.216, 111.63.132.170, 112.15.232.43, 112.17.14.211, 112.54.50.50, 117.156.25.11, 117.187.6.14, 117.187.10.42, 120.202.17.103, 120.204.204.201, 120.209.204.204, 120.222.19.204, 121.4.135.105,183.203.36.19, 183.203.36.36, 183.207.72.18, 183.213.92.2, 183.220.145.129, 183.252.183.9, 211.137.54.227, 211.137.117.149, 211.137.133.69, 211.138.218.190, 211.139.25.61, 211.139.145.129, 218.201.25.129, 218.201.25.130, 218.203.122.98, 221.130.39.3, 221.180.160.221
circumvent-ipv6-answer = ::

[policy]
static=Final, proxy, direct, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
static=AI, proxy
static=Streaming!CN, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming!CN.png
static=StreamingCN, direct, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/StreamingCN.png

[server_remote]

[filter_remote]
# Block OTA update for iOS
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Module/Block/iOSUpdate.sgmodule, tag=⛔️Block OTA Update(iOS), force-policy=reject, update-interval=172800, opt-parser=true, enabled=false

# Direct+
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Direct+.list, tag=🇨🇳Direct+, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true

# Reject
# > Advertising
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list, tag=⛔️Advertising, force-policy=reject, update-interval=172800, opt-parser=true, inserted-resource=true, enabled=true
# > Tracking
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list, tag=⛔️Tracking, force-policy=reject, update-interval=172800, opt-parser=true, inserted-resource=true, enabled=true

# AI
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/AI.list, tag=💡AI, force-policy=AI, update-interval=172800, opt-parser=true, inserted-resource=true, enabled=true

# Streaming!CN
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/!CN.list, tag=🎞Streaming!CN, force-policy=Streaming!CN, update-interval=172800, opt-parser=true, enabled=true

# StreamingCN
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/CN.list, tag=🎞StreamingCN, force-policy=StreamingCN, update-interval=172800, opt-parser=true, enabled=true

# Proxy
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy.list, tag=🇺🇳Proxy, force-policy=proxy, update-interval=172800, opt-parser=true, enabled=true

# Direct
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Direct.list, tag=🇨🇳Direct, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true

# WeChat
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/WeChat.list, tag=💬WeChat, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true

# Proxy+
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy+.list, tag=🇺🇳Proxy+, force-policy=proxy, update-interval=172800, opt-parser=true, enabled=true

[rewrite_remote]
# Block OTA update for iPadOS, Requires "⛔️Block OTA Update(iOS)" filter
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Module/Block/iOSUpdate.sgmodule, tag=⛔️Block OTA Update(iPadOS), update-interval=172800, opt-parser=true, enabled=false

# Unlock bilibili(white)
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Module/Unlock/bilibili.w.sgmodule, tag=🎞Unlock bilibili(white), update-interval=172800, opt-parser=true, enabled=false

# Unlock AbeamTV
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Module/Unlock/AbeamTV.sgmodule, tag=🎞Unlock AbeamTV, update-interval=172800, opt-parser=true, enabled=false

# Block Advertising
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Module/Block/Advertising.sgmodule, tag=⛔️Block Advertising, update-interval=172800, opt-parser=true, enabled=true

[server_local]

[filter_local]
# Local Area Network
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# GeoIP China
geoip, cn, direct

final, Final

[rewrite_local]
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn url 302 https://www.google.com

[task_local]
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=📺流媒体服务查询, img-url=checkmark.seal.system, enabled=true

[http_backend]

[mitm]
skip_validating_cert = true
hostname = www.google.cn
